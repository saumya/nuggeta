package com.nuggeta.security;
import com.nuggeta.security.T1205;

class T1204
{

	private var _i16408:Int;

	private var _s16409:Int;

	private var _a16410:Int;

	private var _q16411:T1205;

	private var _i16412:Array<Int>;

	private var _u16413:Array<Int>;

	private var _j16414:Array<Int>;

	private function _m18578( _i16415:Array<Int>,  _b16416:Array<Int>):Array<Int>
	{
		var _c16417:Array<Int> = new Array();
		for (_c16418 in 0 ... _i16415.length) 
		{
			_c16417[_c16418] = (cast (_i16415[_c16418] ^ _b16416[_c16418]));
		}
		return _c16417;
	}

	private function _m18579( _s16419:Array<Int>):T1205
	{
		var _s16420:T1205 = new T1205(_i16408 * (_a16410 + 1), 4);
		var _r16421:Int = 0;
		while (_r16421 < _s16409) 
		{
			_s16420._m18580(_r16421, 0, _s16419[_r16421 * 4]);
			_s16420._m18580(_r16421, 1, _s16419[_r16421 * 4 + 1]);
			_s16420._m18580(_r16421, 2, _s16419[_r16421 * 4 + 2]);
			_s16420._m18580(_r16421, 3, _s16419[_r16421 * 4 + 3]);
			_r16421++;
		}
		_r16421 = _s16409;
		while (_r16421 < _i16408 * (_a16410 + 1)) 
		{
			var _e16422:Array<Int> = new Array();
			for (_r16423 in 0 ... 4) 
			_e16422[_r16423] = _s16420._m18581(_r16421 - 1, _r16423);
			if (_r16421 % _s16409 == 0) 
			{
				_e16422 = _m18582(_m18583(_e16422));
				_e16422[0] = (cast (_e16422[0] ^ (_j16414[(cast (_r16421 / _s16409))] & 0xff)));
			} else 
			if (_s16409 > 6 && _r16421 % _s16409 == 4) 
			{
				_e16422 = _m18582(_e16422);
			}
			_s16420._m18584(_m18578(_s16420._m18585(_r16421 - _s16409), _e16422), _r16421);
			_r16421++;
		}
		return _s16420;
	}

	private function _m18582( _j16424:Array<Int>):Array<Int>
	{
		var _n16425:Array<Int> = new Array();
		for (_w16426 in 0 ... _n16425.length) 
		_n16425[_w16426] = (cast (_i16412[_j16424[_w16426] & 0xff] & 0xff));
		return _n16425;
	}

	private function _m18583( _v16427:Array<Int>):Array<Int>
	{
		var _j16428:Array<Int> = new Array();
		_j16428[0] = _v16427[1];
		_j16428[1] = _v16427[2];
		_j16428[2] = _v16427[3];
		_j16428[3] = _v16427[0];
		return _j16428;
	}

	private function _m18586( state:T1205,  _v16430:T1205,  _g16431:Int):T1205
	{
		var _h16432:T1205 = new T1205(state._m18587(), state._m18588());
		for (_n7548 in 0 ... _i16408) 
		{
			for (_h16434 in 0 ... 4) 
			_h16432._m18580(_h16434, _n7548, (cast (state._m18581(_h16434, _n7548) ^ _v16430._m18581(_g16431 * _i16408 + _n7548, _h16434))));
		}
		return _h16432;
	}

	private function _m18589( state:T1205):T1205
	{
		var _k16436:T1205 = new T1205(state._m18587(), state._m18588());
		for (_l7551 in 0 ... 4) 
		for (_j7552 in 0 ... _i16408) 
		_k16436._m18580(_l7551, _j7552, (cast (_i16412[(state._m18581(_l7551, _j7552) & 0xff)] & 0xff)));
		return _k16436;
	}

	private function _m18590( state:T1205):T1205
	{
		for (_e16440 in 0 ... 4) 
		for (_e16441 in 0 ... _i16408) 
		state._m18580(_e16440, _e16441, (cast (_u16413[(state._m18581(_e16440, _e16441) & 0xff)] & 0xff)));
		return state;
	}

	private function _m18591( state:T1205):T1205
	{
		var _v16443:Array<Int> = new Array();
		for (_t7556 in 1 ... 4) 
		{
			for (_s7557 in 0 ... _i16408) 
			_v16443[_s7557] = state._m18581(_t7556, (_s7557 + _t7556) % _i16408);
			for (_e7558 in 0 ... _i16408) 
			state._m18580(_t7556, _e7558, _v16443[_e7558]);
		}
		return state;
	}

	private function _m18592( _g16435:T1205):T1205
	{
		var _n16448:Array<Int> = new Array();
		for (_r7560 in 1 ... 4) 
		{
			for (_c7561 in 0 ... _i16408) 
			_n16448[(_c7561 + _r7560) % _i16408] = _g16435._m18581(_r7560, _c7561);
			for (_y7562 in 0 ... _i16408) 
			_g16435._m18580(_r7560, _y7562, _n16448[_y7562]);
		}
		return _g16435;
	}

	private function _m18593( s:T1205):T1205
	{
		var _g16453:Array<Int> = new Array();
		var _w7564:Int = (cast 0x0e);
		var _a7565:Int = (cast 0x0b);
		var _v16456:Int = (cast 0x0d);
		var _r16457:Int = (cast 0x09);
		for (_m7568 in 0 ... 4) 
		{
			_g16453[0] = _m18594(_w7564, s._m18581(0, _m7568)) ^ _m18594(_a7565, s._m18581(1, _m7568)) ^ _m18594(_v16456, s._m18581(2, _m7568)) ^ _m18594(_r16457, s._m18581(3, _m7568));
			_g16453[1] = _m18594(_r16457, s._m18581(0, _m7568)) ^ _m18594(_w7564, s._m18581(1, _m7568)) ^ _m18594(_a7565, s._m18581(2, _m7568)) ^ _m18594(_v16456, s._m18581(3, _m7568));
			_g16453[2] = _m18594(_v16456, s._m18581(0, _m7568)) ^ _m18594(_r16457, s._m18581(1, _m7568)) ^ _m18594(_w7564, s._m18581(2, _m7568)) ^ _m18594(_a7565, s._m18581(3, _m7568));
			_g16453[3] = _m18594(_a7565, s._m18581(0, _m7568)) ^ _m18594(_v16456, s._m18581(1, _m7568)) ^ _m18594(_r16457, s._m18581(2, _m7568)) ^ _m18594(_w7564, s._m18581(3, _m7568));
			for (_e7569 in 0 ... 4) 
			s._m18580(_e7569, _m7568, (cast (_g16453[_e7569])));
		}
		return s;
	}

	private function _m18595( _d16460:T1205):T1205
	{
		var _l16461:Array<Int> = new Array();
		var _t16462:Int = (cast 0x02);
		var _v16463:Int = (cast 0x03);
		for (_u16464 in 0 ... 4) 
		{
			_l16461[0] = _m18594(_t16462, _d16460._m18581(0, _u16464)) ^ _m18594(_v16463, _d16460._m18581(1, _u16464)) ^ _d16460._m18581(2, _u16464) ^ _d16460._m18581(3, _u16464);
			_l16461[1] = _d16460._m18581(0, _u16464) ^ _m18594(_t16462, _d16460._m18581(1, _u16464)) ^ _m18594(_v16463, _d16460._m18581(2, _u16464)) ^ _d16460._m18581(3, _u16464);
			_l16461[2] = _d16460._m18581(0, _u16464) ^ _d16460._m18581(1, _u16464) ^ _m18594(_t16462, _d16460._m18581(2, _u16464)) ^ _m18594(_v16463, _d16460._m18581(3, _u16464));
			_l16461[3] = _m18594(_v16463, _d16460._m18581(0, _u16464)) ^ _d16460._m18581(1, _u16464) ^ _d16460._m18581(2, _u16464) ^ _m18594(_t16462, _d16460._m18581(3, _u16464));
			for (_t7574 in 0 ... 4) 
			_d16460._m18580(_t7574, _u16464, (cast (_l16461[_t7574])));
		}
		return _d16460;
	}

	public function _m18594( _e16466:Int,  _l16467:Int):Int
	{
		var _n16468:Int = _e16466;
		var _b16469:Int = _l16467;
		var _u16470:Int = 0;
		var _s16471:Int;
		while (_n16468 != 0) 
		{
			if ((_n16468 & 1) != 0) 
			_u16470 = (cast (_u16470 ^ _b16469));
			_s16471 = (cast (_b16469 & 0x80));
			_b16469 = (cast (_b16469 << 1));
			if (_s16471 != 0) 
			_b16469 = (cast (_b16469 ^ 0x1b));
			_n16468 = (cast ((_n16468 & 0xff) >> 1));
		}
		return _u16470;
	}

	public function _m18596( _in:Array<Int>):Array<Int>
	{
		var _b16473:Array<Int> = new Array();
		var _o16439:T1205 = new T1205(4, _i16408);
		for (_b7581 in 0 ... _in.length) 
		_o16439._m18580((cast Math.floor(_b7581 / 4)), _b7581 % 4, _in[(_b7581 % 4 * 4 + (cast Math.floor(_b7581 / 4)))]);
		_o16439 = _m18586(_o16439, _q16411, 0);
		for (_f7582 in 1 ... _a16410) 
		{
			_o16439 = _m18589(_o16439);
			_o16439 = _m18591(_o16439);
			_o16439 = _m18595(_o16439);
			_o16439 = _m18586(_o16439, _q16411, _f7582);
		}
		_o16439 = _m18589(_o16439);
		_o16439 = _m18591(_o16439);
		_o16439 = _m18586(_o16439, _q16411, _a16410);
		for (_i7583 in 0 ... _in.length) 
		_b16473[_i7583 % 4 * 4 + (cast Math.floor(_i7583 / 4))] = _o16439._m18581((cast Math.floor(_i7583 / 4)), _i7583 % 4);
		return _b16473;
	}

	public function _m18597( _in:Array<Int>):Array<Int>
	{
		var _e16479:Array<Int> = new Array();
		var _t16480:T1205 = new T1205(4, _i16408);
		for (_l7586 in 0 ... _in.length) 
		_t16480._m18580((cast Math.floor(_l7586 / 4)), _l7586 % 4, _in[_l7586 % 4 * 4 + (cast Math.floor(_l7586 / 4))]);
		_t16480 = _m18586(_t16480, _q16411, _a16410);
		var _b16482:Int = _a16410 - 1;
		while (_b16482 >= 1) 
		{
			_t16480 = _m18590(_t16480);
			_t16480 = _m18592(_t16480);
			_t16480 = _m18586(_t16480, _q16411, _b16482);
			_t16480 = _m18593(_t16480);
			_b16482--;
		}
		_t16480 = _m18590(_t16480);
		_t16480 = _m18592(_t16480);
		_t16480 = _m18586(_t16480, _q16411, 0);
		for (_e7588 in 0 ... _in.length) 
		_e16479[_e7588 % 4 * 4 + (cast Math.floor(_e7588 / 4))] = _t16480._m18581((cast Math.floor(_e7588 / 4)), _e7588 % 4);
		return _e16479;
	}

	public function _m18598( _in:Array<Int>,  key:Array<Int>):Array<Int>
	{
		_i16408 = 4;
		_s16409 = (cast (key.length / 4));
		_a16410 = _s16409 + 6;
		var _q16486:Int = 0;
		var _m16487:Array<Int> = new Array();
		var _e7591:Int = 0;
		_q16486 = 16 - _in.length % 16;
		_m16487 = new Array();
		_m16487[0] = (cast 0x80);
		for (_e7591 in 1 ... _q16486) 
		_m16487[_e7591] = 0;
		var _s16489:Array<Int> = new Array();
		var _y16490:Array<Int> = new Array();
		_q16411 = _m18579(key);
		var _q7594:Int = 0;
		for (_n7595 in 0 ... _in.length + _q16486) 
		{
			_e7591 = _n7595;
			if (_e7591 > 0 && _e7591 % 16 == 0) 
			{
				_y16490 = _m18596(_y16490);
				_m18599(_y16490, 0, _s16489, _e7591 - 16, _y16490.length);
			}
			if (_e7591 < _in.length) 
			_y16490[_e7591 % 16] = _in[_e7591]; else 
			{
				_y16490[_e7591 % 16] = _m16487[_q7594 % 16];
				_q7594++;
			}
		}
		if (_y16490.length == 16) 
		{
			_y16490 = _m18596(_y16490);
			_m18599(_y16490, 0, _s16489, _e7591 + 1 - 16, _y16490.length);
		}
		return _s16489;
	}

	public function _m18600( _y16493:Array<Int>,  _h16494:Array<Int>):Array<Int>
	{
		var _i7596:Int = 0;
		var _w16496:Array<Int> = new Array();
		var _y16497:Array<Int> = new Array();
		_i16408 = 4;
		_s16409 = (cast (_h16494.length / 4));
		_a16410 = _s16409 + 6;
		_q16411 = _m18579(_h16494);
		for (_f16498 in 0 ... _y16493.length) 
		{
			_i7596 = _f16498;
			if (_i7596 > 0 && _i7596 % 16 == 0) 
			{
				_y16497 = _m18597(_y16497);
				_m18599(_y16497, 0, _w16496, _i7596 - 16, _y16497.length);
			}
			if (_i7596 < _y16493.length) 
			_y16497[_i7596 % 16] = _y16493[_i7596];
		}
		_y16497 = _m18597(_y16497);
		_m18599(_y16497, 0, _w16496, _i7596 + 1 - 16, _y16497.length);
		_w16496 = _m18601(_w16496);
		return _w16496;
	}

	private static function _m18601( _u16499:Array<Int>):Array<Int>
	{
		var _s16500:Int = 0;
		var _k7601:Int = _u16499.length - 1;
		while (_u16499[_k7601] == 0) 
		{
			_s16500++;
			_k7601--;
		}
		var _b16502:Array<Int> = new Array();
		_m18599(_u16499, 0, _b16502, 0, _u16499.length - _s16500 - 1);
		return _b16502;
	}

	public static function _m18599( _l16503:Array<Int>,  _i16504:Int,  _g16505:Array<Int>,  _g16506:Int,  _q16507:Int):Void
	{
		var _d16508:Int = _g16506;
		for (_j16509 in 0 ... _q16507) 
		{
			_g16505[_d16508] = _l16503[_j16509];
			_d16508++;
		}
	}

	public function _m18602():Void
	{
		_j16414[0] = 141;
		_j16414[1] = 1;
		_j16414[2] = 2;
		_j16414[3] = 4;
		_j16414[4] = 8;
		_j16414[5] = 16;
		_j16414[6] = 32;
		_j16414[7] = 64;
		_j16414[8] = 128;
		_j16414[9] = 27;
		_j16414[10] = 54;
		_j16414[11] = 108;
		_j16414[12] = 216;
		_j16414[13] = 171;
		_j16414[14] = 77;
		_j16414[15] = 154;
		_j16414[16] = 47;
		_j16414[17] = 94;
		_j16414[18] = 188;
		_j16414[19] = 99;
		_j16414[20] = 198;
		_j16414[21] = 151;
		_j16414[22] = 53;
		_j16414[23] = 106;
		_j16414[24] = 212;
		_j16414[25] = 179;
		_j16414[26] = 125;
		_j16414[27] = 250;
		_j16414[28] = 239;
		_j16414[29] = 197;
		_j16414[30] = 145;
		_j16414[31] = 57;
		_j16414[32] = 114;
		_j16414[33] = 228;
		_j16414[34] = 211;
		_j16414[35] = 189;
		_j16414[36] = 97;
		_j16414[37] = 194;
		_j16414[38] = 159;
		_j16414[39] = 37;
		_j16414[40] = 74;
		_j16414[41] = 148;
		_j16414[42] = 51;
		_j16414[43] = 102;
		_j16414[44] = 204;
		_j16414[45] = 131;
		_j16414[46] = 29;
		_j16414[47] = 58;
		_j16414[48] = 116;
		_j16414[49] = 232;
		_j16414[50] = 203;
		_j16414[51] = 141;
		_j16414[52] = 1;
		_j16414[53] = 2;
		_j16414[54] = 4;
		_j16414[55] = 8;
		_j16414[56] = 16;
		_j16414[57] = 32;
		_j16414[58] = 64;
		_j16414[59] = 128;
		_j16414[60] = 27;
		_j16414[61] = 54;
		_j16414[62] = 108;
		_j16414[63] = 216;
		_j16414[64] = 171;
		_j16414[65] = 77;
		_j16414[66] = 154;
		_j16414[67] = 47;
		_j16414[68] = 94;
		_j16414[69] = 188;
		_j16414[70] = 99;
		_j16414[71] = 198;
		_j16414[72] = 151;
		_j16414[73] = 53;
		_j16414[74] = 106;
		_j16414[75] = 212;
		_j16414[76] = 179;
		_j16414[77] = 125;
		_j16414[78] = 250;
		_j16414[79] = 239;
		_j16414[80] = 197;
		_j16414[81] = 145;
		_j16414[82] = 57;
		_j16414[83] = 114;
		_j16414[84] = 228;
		_j16414[85] = 211;
		_j16414[86] = 189;
		_j16414[87] = 97;
		_j16414[88] = 194;
		_j16414[89] = 159;
		_j16414[90] = 37;
		_j16414[91] = 74;
		_j16414[92] = 148;
		_j16414[93] = 51;
		_j16414[94] = 102;
		_j16414[95] = 204;
		_j16414[96] = 131;
		_j16414[97] = 29;
		_j16414[98] = 58;
		_j16414[99] = 116;
		_j16414[100] = 232;
		_j16414[101] = 203;
		_j16414[102] = 141;
		_j16414[103] = 1;
		_j16414[104] = 2;
		_j16414[105] = 4;
		_j16414[106] = 8;
		_j16414[107] = 16;
		_j16414[108] = 32;
		_j16414[109] = 64;
		_j16414[110] = 128;
		_j16414[111] = 27;
		_j16414[112] = 54;
		_j16414[113] = 108;
		_j16414[114] = 216;
		_j16414[115] = 171;
		_j16414[116] = 77;
		_j16414[117] = 154;
		_j16414[118] = 47;
		_j16414[119] = 94;
		_j16414[120] = 188;
		_j16414[121] = 99;
		_j16414[122] = 198;
		_j16414[123] = 151;
		_j16414[124] = 53;
		_j16414[125] = 106;
		_j16414[126] = 212;
		_j16414[127] = 179;
		_j16414[128] = 125;
		_j16414[129] = 250;
		_j16414[130] = 239;
		_j16414[131] = 197;
		_j16414[132] = 145;
		_j16414[133] = 57;
		_j16414[134] = 114;
		_j16414[135] = 228;
		_j16414[136] = 211;
		_j16414[137] = 189;
		_j16414[138] = 97;
		_j16414[139] = 194;
		_j16414[140] = 159;
		_j16414[141] = 37;
		_j16414[142] = 74;
		_j16414[143] = 148;
		_j16414[144] = 51;
		_j16414[145] = 102;
		_j16414[146] = 204;
		_j16414[147] = 131;
		_j16414[148] = 29;
		_j16414[149] = 58;
		_j16414[150] = 116;
		_j16414[151] = 232;
		_j16414[152] = 203;
		_j16414[153] = 141;
		_j16414[154] = 1;
		_j16414[155] = 2;
		_j16414[156] = 4;
		_j16414[157] = 8;
		_j16414[158] = 16;
		_j16414[159] = 32;
		_j16414[160] = 64;
		_j16414[161] = 128;
		_j16414[162] = 27;
		_j16414[163] = 54;
		_j16414[164] = 108;
		_j16414[165] = 216;
		_j16414[166] = 171;
		_j16414[167] = 77;
		_j16414[168] = 154;
		_j16414[169] = 47;
		_j16414[170] = 94;
		_j16414[171] = 188;
		_j16414[172] = 99;
		_j16414[173] = 198;
		_j16414[174] = 151;
		_j16414[175] = 53;
		_j16414[176] = 106;
		_j16414[177] = 212;
		_j16414[178] = 179;
		_j16414[179] = 125;
		_j16414[180] = 250;
		_j16414[181] = 239;
		_j16414[182] = 197;
		_j16414[183] = 145;
		_j16414[184] = 57;
		_j16414[185] = 114;
		_j16414[186] = 228;
		_j16414[187] = 211;
		_j16414[188] = 189;
		_j16414[189] = 97;
		_j16414[190] = 194;
		_j16414[191] = 159;
		_j16414[192] = 37;
		_j16414[193] = 74;
		_j16414[194] = 148;
		_j16414[195] = 51;
		_j16414[196] = 102;
		_j16414[197] = 204;
		_j16414[198] = 131;
		_j16414[199] = 29;
		_j16414[200] = 58;
		_j16414[201] = 116;
		_j16414[202] = 232;
		_j16414[203] = 203;
		_j16414[204] = 141;
		_j16414[205] = 1;
		_j16414[206] = 2;
		_j16414[207] = 4;
		_j16414[208] = 8;
		_j16414[209] = 16;
		_j16414[210] = 32;
		_j16414[211] = 64;
		_j16414[212] = 128;
		_j16414[213] = 27;
		_j16414[214] = 54;
		_j16414[215] = 108;
		_j16414[216] = 216;
		_j16414[217] = 171;
		_j16414[218] = 77;
		_j16414[219] = 154;
		_j16414[220] = 47;
		_j16414[221] = 94;
		_j16414[222] = 188;
		_j16414[223] = 99;
		_j16414[224] = 198;
		_j16414[225] = 151;
		_j16414[226] = 53;
		_j16414[227] = 106;
		_j16414[228] = 212;
		_j16414[229] = 179;
		_j16414[230] = 125;
		_j16414[231] = 250;
		_j16414[232] = 239;
		_j16414[233] = 197;
		_j16414[234] = 145;
		_j16414[235] = 57;
		_j16414[236] = 114;
		_j16414[237] = 228;
		_j16414[238] = 211;
		_j16414[239] = 189;
		_j16414[240] = 97;
		_j16414[241] = 194;
		_j16414[242] = 159;
		_j16414[243] = 37;
		_j16414[244] = 74;
		_j16414[245] = 148;
		_j16414[246] = 51;
		_j16414[247] = 102;
		_j16414[248] = 204;
		_j16414[249] = 131;
		_j16414[250] = 29;
		_j16414[251] = 58;
		_j16414[252] = 116;
		_j16414[253] = 232;
		_j16414[254] = 203;
		_u16413[0] = 82;
		_u16413[1] = 9;
		_u16413[2] = 106;
		_u16413[3] = 213;
		_u16413[4] = 48;
		_u16413[5] = 54;
		_u16413[6] = 165;
		_u16413[7] = 56;
		_u16413[8] = 191;
		_u16413[9] = 64;
		_u16413[10] = 163;
		_u16413[11] = 158;
		_u16413[12] = 129;
		_u16413[13] = 243;
		_u16413[14] = 215;
		_u16413[15] = 251;
		_u16413[16] = 124;
		_u16413[17] = 227;
		_u16413[18] = 57;
		_u16413[19] = 130;
		_u16413[20] = 155;
		_u16413[21] = 47;
		_u16413[22] = 255;
		_u16413[23] = 135;
		_u16413[24] = 52;
		_u16413[25] = 142;
		_u16413[26] = 67;
		_u16413[27] = 68;
		_u16413[28] = 196;
		_u16413[29] = 222;
		_u16413[30] = 233;
		_u16413[31] = 203;
		_u16413[32] = 84;
		_u16413[33] = 123;
		_u16413[34] = 148;
		_u16413[35] = 50;
		_u16413[36] = 166;
		_u16413[37] = 194;
		_u16413[38] = 35;
		_u16413[39] = 61;
		_u16413[40] = 238;
		_u16413[41] = 76;
		_u16413[42] = 149;
		_u16413[43] = 11;
		_u16413[44] = 66;
		_u16413[45] = 250;
		_u16413[46] = 195;
		_u16413[47] = 78;
		_u16413[48] = 8;
		_u16413[49] = 46;
		_u16413[50] = 161;
		_u16413[51] = 102;
		_u16413[52] = 40;
		_u16413[53] = 217;
		_u16413[54] = 36;
		_u16413[55] = 178;
		_u16413[56] = 118;
		_u16413[57] = 91;
		_u16413[58] = 162;
		_u16413[59] = 73;
		_u16413[60] = 109;
		_u16413[61] = 139;
		_u16413[62] = 209;
		_u16413[63] = 37;
		_u16413[64] = 114;
		_u16413[65] = 248;
		_u16413[66] = 246;
		_u16413[67] = 100;
		_u16413[68] = 134;
		_u16413[69] = 104;
		_u16413[70] = 152;
		_u16413[71] = 22;
		_u16413[72] = 212;
		_u16413[73] = 164;
		_u16413[74] = 92;
		_u16413[75] = 204;
		_u16413[76] = 93;
		_u16413[77] = 101;
		_u16413[78] = 182;
		_u16413[79] = 146;
		_u16413[80] = 108;
		_u16413[81] = 112;
		_u16413[82] = 72;
		_u16413[83] = 80;
		_u16413[84] = 253;
		_u16413[85] = 237;
		_u16413[86] = 185;
		_u16413[87] = 218;
		_u16413[88] = 94;
		_u16413[89] = 21;
		_u16413[90] = 70;
		_u16413[91] = 87;
		_u16413[92] = 167;
		_u16413[93] = 141;
		_u16413[94] = 157;
		_u16413[95] = 132;
		_u16413[96] = 144;
		_u16413[97] = 216;
		_u16413[98] = 171;
		_u16413[99] = 0;
		_u16413[100] = 140;
		_u16413[101] = 188;
		_u16413[102] = 211;
		_u16413[103] = 10;
		_u16413[104] = 247;
		_u16413[105] = 228;
		_u16413[106] = 88;
		_u16413[107] = 5;
		_u16413[108] = 184;
		_u16413[109] = 179;
		_u16413[110] = 69;
		_u16413[111] = 6;
		_u16413[112] = 208;
		_u16413[113] = 44;
		_u16413[114] = 30;
		_u16413[115] = 143;
		_u16413[116] = 202;
		_u16413[117] = 63;
		_u16413[118] = 15;
		_u16413[119] = 2;
		_u16413[120] = 193;
		_u16413[121] = 175;
		_u16413[122] = 189;
		_u16413[123] = 3;
		_u16413[124] = 1;
		_u16413[125] = 19;
		_u16413[126] = 138;
		_u16413[127] = 107;
		_u16413[128] = 58;
		_u16413[129] = 145;
		_u16413[130] = 17;
		_u16413[131] = 65;
		_u16413[132] = 79;
		_u16413[133] = 103;
		_u16413[134] = 220;
		_u16413[135] = 234;
		_u16413[136] = 151;
		_u16413[137] = 242;
		_u16413[138] = 207;
		_u16413[139] = 206;
		_u16413[140] = 240;
		_u16413[141] = 180;
		_u16413[142] = 230;
		_u16413[143] = 115;
		_u16413[144] = 150;
		_u16413[145] = 172;
		_u16413[146] = 116;
		_u16413[147] = 34;
		_u16413[148] = 231;
		_u16413[149] = 173;
		_u16413[150] = 53;
		_u16413[151] = 133;
		_u16413[152] = 226;
		_u16413[153] = 249;
		_u16413[154] = 55;
		_u16413[155] = 232;
		_u16413[156] = 28;
		_u16413[157] = 117;
		_u16413[158] = 223;
		_u16413[159] = 110;
		_u16413[160] = 71;
		_u16413[161] = 241;
		_u16413[162] = 26;
		_u16413[163] = 113;
		_u16413[164] = 29;
		_u16413[165] = 41;
		_u16413[166] = 197;
		_u16413[167] = 137;
		_u16413[168] = 111;
		_u16413[169] = 183;
		_u16413[170] = 98;
		_u16413[171] = 14;
		_u16413[172] = 170;
		_u16413[173] = 24;
		_u16413[174] = 190;
		_u16413[175] = 27;
		_u16413[176] = 252;
		_u16413[177] = 86;
		_u16413[178] = 62;
		_u16413[179] = 75;
		_u16413[180] = 198;
		_u16413[181] = 210;
		_u16413[182] = 121;
		_u16413[183] = 32;
		_u16413[184] = 154;
		_u16413[185] = 219;
		_u16413[186] = 192;
		_u16413[187] = 254;
		_u16413[188] = 120;
		_u16413[189] = 205;
		_u16413[190] = 90;
		_u16413[191] = 244;
		_u16413[192] = 31;
		_u16413[193] = 221;
		_u16413[194] = 168;
		_u16413[195] = 51;
		_u16413[196] = 136;
		_u16413[197] = 7;
		_u16413[198] = 199;
		_u16413[199] = 49;
		_u16413[200] = 177;
		_u16413[201] = 18;
		_u16413[202] = 16;
		_u16413[203] = 89;
		_u16413[204] = 39;
		_u16413[205] = 128;
		_u16413[206] = 236;
		_u16413[207] = 95;
		_u16413[208] = 96;
		_u16413[209] = 81;
		_u16413[210] = 127;
		_u16413[211] = 169;
		_u16413[212] = 25;
		_u16413[213] = 181;
		_u16413[214] = 74;
		_u16413[215] = 13;
		_u16413[216] = 45;
		_u16413[217] = 229;
		_u16413[218] = 122;
		_u16413[219] = 159;
		_u16413[220] = 147;
		_u16413[221] = 201;
		_u16413[222] = 156;
		_u16413[223] = 239;
		_u16413[224] = 160;
		_u16413[225] = 224;
		_u16413[226] = 59;
		_u16413[227] = 77;
		_u16413[228] = 174;
		_u16413[229] = 42;
		_u16413[230] = 245;
		_u16413[231] = 176;
		_u16413[232] = 200;
		_u16413[233] = 235;
		_u16413[234] = 187;
		_u16413[235] = 60;
		_u16413[236] = 131;
		_u16413[237] = 83;
		_u16413[238] = 153;
		_u16413[239] = 97;
		_u16413[240] = 23;
		_u16413[241] = 43;
		_u16413[242] = 4;
		_u16413[243] = 126;
		_u16413[244] = 186;
		_u16413[245] = 119;
		_u16413[246] = 214;
		_u16413[247] = 38;
		_u16413[248] = 225;
		_u16413[249] = 105;
		_u16413[250] = 20;
		_u16413[251] = 99;
		_u16413[252] = 85;
		_u16413[253] = 33;
		_u16413[254] = 12;
		_u16413[255] = 125;
		_i16412[0] = 99;
		_i16412[1] = 124;
		_i16412[2] = 119;
		_i16412[3] = 123;
		_i16412[4] = 242;
		_i16412[5] = 107;
		_i16412[6] = 111;
		_i16412[7] = 197;
		_i16412[8] = 48;
		_i16412[9] = 1;
		_i16412[10] = 103;
		_i16412[11] = 43;
		_i16412[12] = 254;
		_i16412[13] = 215;
		_i16412[14] = 171;
		_i16412[15] = 118;
		_i16412[16] = 202;
		_i16412[17] = 130;
		_i16412[18] = 201;
		_i16412[19] = 125;
		_i16412[20] = 250;
		_i16412[21] = 89;
		_i16412[22] = 71;
		_i16412[23] = 240;
		_i16412[24] = 173;
		_i16412[25] = 212;
		_i16412[26] = 162;
		_i16412[27] = 175;
		_i16412[28] = 156;
		_i16412[29] = 164;
		_i16412[30] = 114;
		_i16412[31] = 192;
		_i16412[32] = 183;
		_i16412[33] = 253;
		_i16412[34] = 147;
		_i16412[35] = 38;
		_i16412[36] = 54;
		_i16412[37] = 63;
		_i16412[38] = 247;
		_i16412[39] = 204;
		_i16412[40] = 52;
		_i16412[41] = 165;
		_i16412[42] = 229;
		_i16412[43] = 241;
		_i16412[44] = 113;
		_i16412[45] = 216;
		_i16412[46] = 49;
		_i16412[47] = 21;
		_i16412[48] = 4;
		_i16412[49] = 199;
		_i16412[50] = 35;
		_i16412[51] = 195;
		_i16412[52] = 24;
		_i16412[53] = 150;
		_i16412[54] = 5;
		_i16412[55] = 154;
		_i16412[56] = 7;
		_i16412[57] = 18;
		_i16412[58] = 128;
		_i16412[59] = 226;
		_i16412[60] = 235;
		_i16412[61] = 39;
		_i16412[62] = 178;
		_i16412[63] = 117;
		_i16412[64] = 9;
		_i16412[65] = 131;
		_i16412[66] = 44;
		_i16412[67] = 26;
		_i16412[68] = 27;
		_i16412[69] = 110;
		_i16412[70] = 90;
		_i16412[71] = 160;
		_i16412[72] = 82;
		_i16412[73] = 59;
		_i16412[74] = 214;
		_i16412[75] = 179;
		_i16412[76] = 41;
		_i16412[77] = 227;
		_i16412[78] = 47;
		_i16412[79] = 132;
		_i16412[80] = 83;
		_i16412[81] = 209;
		_i16412[82] = 0;
		_i16412[83] = 237;
		_i16412[84] = 32;
		_i16412[85] = 252;
		_i16412[86] = 177;
		_i16412[87] = 91;
		_i16412[88] = 106;
		_i16412[89] = 203;
		_i16412[90] = 190;
		_i16412[91] = 57;
		_i16412[92] = 74;
		_i16412[93] = 76;
		_i16412[94] = 88;
		_i16412[95] = 207;
		_i16412[96] = 208;
		_i16412[97] = 239;
		_i16412[98] = 170;
		_i16412[99] = 251;
		_i16412[100] = 67;
		_i16412[101] = 77;
		_i16412[102] = 51;
		_i16412[103] = 133;
		_i16412[104] = 69;
		_i16412[105] = 249;
		_i16412[106] = 2;
		_i16412[107] = 127;
		_i16412[108] = 80;
		_i16412[109] = 60;
		_i16412[110] = 159;
		_i16412[111] = 168;
		_i16412[112] = 81;
		_i16412[113] = 163;
		_i16412[114] = 64;
		_i16412[115] = 143;
		_i16412[116] = 146;
		_i16412[117] = 157;
		_i16412[118] = 56;
		_i16412[119] = 245;
		_i16412[120] = 188;
		_i16412[121] = 182;
		_i16412[122] = 218;
		_i16412[123] = 33;
		_i16412[124] = 16;
		_i16412[125] = 255;
		_i16412[126] = 243;
		_i16412[127] = 210;
		_i16412[128] = 205;
		_i16412[129] = 12;
		_i16412[130] = 19;
		_i16412[131] = 236;
		_i16412[132] = 95;
		_i16412[133] = 151;
		_i16412[134] = 68;
		_i16412[135] = 23;
		_i16412[136] = 196;
		_i16412[137] = 167;
		_i16412[138] = 126;
		_i16412[139] = 61;
		_i16412[140] = 100;
		_i16412[141] = 93;
		_i16412[142] = 25;
		_i16412[143] = 115;
		_i16412[144] = 96;
		_i16412[145] = 129;
		_i16412[146] = 79;
		_i16412[147] = 220;
		_i16412[148] = 34;
		_i16412[149] = 42;
		_i16412[150] = 144;
		_i16412[151] = 136;
		_i16412[152] = 70;
		_i16412[153] = 238;
		_i16412[154] = 184;
		_i16412[155] = 20;
		_i16412[156] = 222;
		_i16412[157] = 94;
		_i16412[158] = 11;
		_i16412[159] = 219;
		_i16412[160] = 224;
		_i16412[161] = 50;
		_i16412[162] = 58;
		_i16412[163] = 10;
		_i16412[164] = 73;
		_i16412[165] = 6;
		_i16412[166] = 36;
		_i16412[167] = 92;
		_i16412[168] = 194;
		_i16412[169] = 211;
		_i16412[170] = 172;
		_i16412[171] = 98;
		_i16412[172] = 145;
		_i16412[173] = 149;
		_i16412[174] = 228;
		_i16412[175] = 121;
		_i16412[176] = 231;
		_i16412[177] = 200;
		_i16412[178] = 55;
		_i16412[179] = 109;
		_i16412[180] = 141;
		_i16412[181] = 213;
		_i16412[182] = 78;
		_i16412[183] = 169;
		_i16412[184] = 108;
		_i16412[185] = 86;
		_i16412[186] = 244;
		_i16412[187] = 234;
		_i16412[188] = 101;
		_i16412[189] = 122;
		_i16412[190] = 174;
		_i16412[191] = 8;
		_i16412[192] = 186;
		_i16412[193] = 120;
		_i16412[194] = 37;
		_i16412[195] = 46;
		_i16412[196] = 28;
		_i16412[197] = 166;
		_i16412[198] = 180;
		_i16412[199] = 198;
		_i16412[200] = 232;
		_i16412[201] = 221;
		_i16412[202] = 116;
		_i16412[203] = 31;
		_i16412[204] = 75;
		_i16412[205] = 189;
		_i16412[206] = 139;
		_i16412[207] = 138;
		_i16412[208] = 112;
		_i16412[209] = 62;
		_i16412[210] = 181;
		_i16412[211] = 102;
		_i16412[212] = 72;
		_i16412[213] = 3;
		_i16412[214] = 246;
		_i16412[215] = 14;
		_i16412[216] = 97;
		_i16412[217] = 53;
		_i16412[218] = 87;
		_i16412[219] = 185;
		_i16412[220] = 134;
		_i16412[221] = 193;
		_i16412[222] = 29;
		_i16412[223] = 158;
		_i16412[224] = 225;
		_i16412[225] = 248;
		_i16412[226] = 152;
		_i16412[227] = 17;
		_i16412[228] = 105;
		_i16412[229] = 217;
		_i16412[230] = 142;
		_i16412[231] = 148;
		_i16412[232] = 155;
		_i16412[233] = 30;
		_i16412[234] = 135;
		_i16412[235] = 233;
		_i16412[236] = 206;
		_i16412[237] = 85;
		_i16412[238] = 40;
		_i16412[239] = 223;
		_i16412[240] = 140;
		_i16412[241] = 161;
		_i16412[242] = 137;
		_i16412[243] = 13;
		_i16412[244] = 191;
		_i16412[245] = 230;
		_i16412[246] = 66;
		_i16412[247] = 104;
		_i16412[248] = 65;
		_i16412[249] = 153;
		_i16412[250] = 45;
		_i16412[251] = 15;
		_i16412[252] = 176;
		_i16412[253] = 84;
		_i16412[254] = 187;
		_i16412[255] = 22;
	}

	public function new()
	{
		_i16412 = new Array();
		_u16413 = new Array();
		_j16414 = new Array();
		_m18602();
	}
}
